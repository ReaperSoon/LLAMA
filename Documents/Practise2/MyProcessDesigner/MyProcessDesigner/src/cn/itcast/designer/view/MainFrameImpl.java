/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProcessDesigner.java
 *
 * Created on 2010-11-3, 15:31:46
 */
package cn.itcast.designer.view;

import cn.itcast.designer.core.FuncType;
import cn.itcast.designer.core.dialog.PropertiesDialog;
import cn.itcast.designer.core.model.base.ProcessElement;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JToggleButton;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tyg
 */
public class MainFrameImpl extends javax.swing.JFrame implements MainFrame {

    private List<JToggleButton> toggleButtonList = new ArrayList<JToggleButton>();

    /** Creates new form ProcessDesigner */
    public MainFrameImpl() {
        initComponents();

        /* 让窗口居中 */
        int x = getToolkit().getScreenSize().width / 2 - getWidth() / 2;
        int y = getToolkit().getScreenSize().height / 2 - getHeight() / 2;
        this.setLocation(x, y);
        try {
            // JFrame.setDefaultLookAndFeelDecorated(true); ??
            // TODO LookAndFeel
            //  1，先使用UIManager.setLookAndFeel(String s)方法设定对应的外观
            //  2，再使用SwingUtilities.updateComponentTreeUI(Component c)方法立刻更新应用的外观
//            UIManager.setLookAndFeel(new Office2003LookAndFeel());
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
//            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }

        toggleButtonList.add(btnSelect);
        toggleButtonList.add(jToggleButton2);
        toggleButtonList.add(jToggleButton3);
        toggleButtonList.add(jToggleButton4);
        toggleButtonList.add(jToggleButton5);

        // 默认选中“选择功能”
        btnSelect.setSelected(true);
        getDesignerPanel().setFuncType(FuncType.SELECT);

        // 默认属性按钮不可用
        btnProperties.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSelect = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        designerPanel = new cn.itcast.designer.view.DesignerPanel(this);
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnProperties = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Flow Designer");

        btnSelect.setText("Select");
        btnSelect.setName("btnSelect"); // NOI18N
        btnSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSelectMousePressed(evt);
            }
        });

        jToggleButton2.setText("Flow Line");
        jToggleButton2.setName("jToggleButton2"); // NOI18N
        jToggleButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jToggleButton2MousePressed(evt);
            }
        });

        jToggleButton3.setText("Task");
        jToggleButton3.setName("jToggleButton3"); // NOI18N
        jToggleButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jToggleButton3MousePressed(evt);
            }
        });

        jToggleButton4.setText("Start");
        jToggleButton4.setName("jToggleButton4"); // NOI18N
        jToggleButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jToggleButton4MousePressed(evt);
            }
        });

        jToggleButton5.setText("End");
        jToggleButton5.setName("jToggleButton5"); // NOI18N
        jToggleButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jToggleButton5MousePressed(evt);
            }
        });

        designerPanel.setBackground(new java.awt.Color(255, 255, 255));
        designerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        designerPanel.setName("designerPanel"); // NOI18N

        javax.swing.GroupLayout designerPanelLayout = new javax.swing.GroupLayout(designerPanel);
        designerPanel.setLayout(designerPanelLayout);
        designerPanelLayout.setHorizontalGroup(
            designerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
        );
        designerPanelLayout.setVerticalGroup(
            designerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        jButton1.setText("Remove");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        jButton2.setText("Save");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });

        btnProperties.setText("Attributes");
        btnProperties.setName("btnProperties"); // NOI18N
        btnProperties.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnPropertiesMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToggleButton2)
                    .addComponent(btnSelect)
                    .addComponent(jToggleButton4)
                    .addComponent(jToggleButton5)
                    .addComponent(jToggleButton3)
                    .addComponent(btnProperties))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 283, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(designerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(designerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSelect)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton2)
                        .addGap(29, 29, 29)
                        .addComponent(jToggleButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton3)
                        .addGap(30, 30, 30)
                        .addComponent(btnProperties)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectMousePressed
        getDesignerPanel().setFuncType(FuncType.SELECT);
        setToggleButtonsStatus(btnSelect, false);
    }//GEN-LAST:event_btnSelectMousePressed

    private void jToggleButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton2MousePressed
        getDesignerPanel().setFuncType(FuncType.PROCESS_TRANSITION);
        setToggleButtonsStatus(jToggleButton2, false);
    }//GEN-LAST:event_jToggleButton2MousePressed

    private void jToggleButton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton3MousePressed
        getDesignerPanel().setFuncType(FuncType.PROCESS_NODE_TASK);
        setToggleButtonsStatus(jToggleButton3, false);
    }//GEN-LAST:event_jToggleButton3MousePressed

    private void jToggleButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton4MousePressed
        getDesignerPanel().setFuncType(FuncType.PROCESS_NODE_START);
        setToggleButtonsStatus(jToggleButton4, false);
    }//GEN-LAST:event_jToggleButton4MousePressed

    private void jToggleButton5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton5MousePressed
        getDesignerPanel().setFuncType(FuncType.PROCESS_NODE_END);
        setToggleButtonsStatus(jToggleButton5, false);
    }//GEN-LAST:event_jToggleButton5MousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        getDesignerPanel().deleteSelectedProcessNode();
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // 创建并配置文件选择器
        JFileChooser jFileChooser = new JFileChooser("c:/");
        jFileChooser.setDialogTitle("Save To");
        // jFileChooser.setDialogType(JFileChooser.CUSTOM_DIALOG); // 设置为保存类型的对话框
        jFileChooser.setFileFilter(new FileNameExtensionFilter("Flow Definition File(*.zip)", "zip"));

        // 显示保存类型的对话框，并获取选择的文件全限定名
        int result = jFileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) { // JFileChooser.CANCEL_OPTION 表示取消
            // 获取文件名
            File file = jFileChooser.getSelectedFile();
            String path = file.getPath();
            if (!file.getName().endsWith(".zip")) {
                path = file.getPath() + ".zip";
            }

            // 保存流程定义文档
            getDesignerPanel().saveProcessArchive(path);
        }
    }//GEN-LAST:event_jButton2MousePressed

    private void btnPropertiesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPropertiesMousePressed
        // 当前要配置的元素
        ProcessElement configurableElement = getDesignerPanel().getExecutionContext().getSelectedNodes().get(0);
        new PropertiesDialog(this, configurableElement).setVisible(true);
    }//GEN-LAST:event_btnPropertiesMousePressed

    /**
     *
     * @return 绘图区
     */
    public DesignerPanel getDesignerPanel() {
        return (DesignerPanel) designerPanel;
    }

    /**
     * 指定设置属性的按钮是否可用
     * @param b
     */
    public void setConfigurePropertiesButtonEnable(boolean b) {
        btnProperties.setEnabled(b);
    }

    /**
     * 设置按钮的选中状态（只选中当前选的的按钮）
     * @param currentSelected
     */
    public void setToggleButtonsStatus(JToggleButton currentSelected, boolean selectSelect) {
        //TODO 如果使用 if(currentSelected.isSelected()){currentSelected.setSelected(true);}，则在点击非选择功能按钮时，不会显示选中状态，为什么？

        if (selectSelect) {
            currentSelected.setSelected(true);
        }

        for (JToggleButton btn : toggleButtonList) {
            if (btn != currentSelected) {
                btn.setSelected(false);
            }
        }
    }

    public JButton getBtnProperties() {
        return btnProperties;
    }

    public JToggleButton getBtnSelect() {
        return btnSelect;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrameImpl().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProperties;
    private javax.swing.JToggleButton btnSelect;
    private javax.swing.JPanel designerPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    // End of variables declaration//GEN-END:variables
}
